name: Release CI

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch: # 添加手动触发入口
    inputs:
        version:
            description: '发布版本号 (格式 v1.0.0)' 
            required: true
            default: 'v0.0.1'

jobs:
  build-universal-tool:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'windows-latest'
            args: ''
            
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm
      - run: pnpm install --frozen-lockfile

      - name: 'Setup Rust'
        uses: dtolnay/rust-toolchain@stable
        with:
            # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
            targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
  
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
            workspaces: './src-tauri -> target'


      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
            tagName: UniversalTool-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
            releaseName: 'UniversalTool v__VERSION__'
            releaseBody: 'See the assets to download this version and install.'
            releaseDraft: true
            prerelease: false
            args: ${{ matrix.args }}
